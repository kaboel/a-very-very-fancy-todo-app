generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String            @id @default(uuid())
  name         String
  email        String            @unique
  password     String
  role         String
  doctorNumber Int?              @unique
  createdAt    DateTime?         @default(now())
  updatedAt    DateTime?         @updatedAt
  // Relationships
  patients     PatientOnDoctor[]
  tasks        Task[]
  assignments  TaskAssignment[]
}

model Patient {
  id        String            @id @default(uuid())
  name      String
  phone     String
  address   String
  createdAt DateTime?         @default(now())
  updatedAt DateTime?         @updatedAt
  // Relationships
  mentions  Task[]
  doctors   PatientOnDoctor[]
}

model PatientOnDoctor {
  id        String    @id @default(uuid())
  createdAt DateTime? @default(now())
  doctorId  String
  patientId String
  // Relationships
  doctor    User      @relation(fields: [doctorId], references: [id])
  patient   Patient   @relation(fields: [patientId], references: [id])

  @@unique([doctorId, patientId])
}

model Task {
  id          String           @id @default(uuid())
  title       String
  description String?
  completed   Boolean          @default(false)
  creatorId   String
  patientId   String?
  deadline    DateTime?
  createdAt   DateTime?        @default(now())
  updatedAt   DateTime?        @updatedAt
  // Relationships
  creator     User             @relation(fields: [creatorId], references: [id])
  patient     Patient?         @relation(fields: [patientId], references: [id])
  assignments TaskAssignment[]
  resources   TaskResource[]
}

model TaskAssignment {
  id        String    @id @default(uuid())
  taskId    String
  userId    String
  createdAt DateTime? @default(now())
  // Relationships
  task      Task      @relation(fields: [taskId], references: [id])
  assignee  User      @relation(fields: [userId], references: [id])

  @@unique([taskId, userId])
}

model TaskResource {
  id             String       @id @default(uuid())
  originalName   String
  filename       String
  mimetype       String
  size           Int
  path           String
  taskId         String
  resourceTypeId String
  createdAt      DateTime?    @default(now())
  // Relationships
  task           Task         @relation(fields: [taskId], references: [id])
  resourceType   ResourceType @relation(fields: [resourceTypeId], references: [id])
}

model ResourceType {
  id           String         @id @default(uuid())
  type         String
  createdAt    DateTime?      @default(now())
  // Relationships
  taskResource TaskResource[]
}
